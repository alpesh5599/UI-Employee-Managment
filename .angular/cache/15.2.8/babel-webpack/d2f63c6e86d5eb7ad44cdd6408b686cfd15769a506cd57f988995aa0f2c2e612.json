{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/candidate.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class ResumeUploaderComponent {\n  constructor(service, _snackBar, router) {\n    this.service = service;\n    this._snackBar = _snackBar;\n    this.router = router;\n    this.formData = new FormData();\n  }\n  ngOnInit() {\n    this.resume = new FormGroup({\n      myFile: new FormControl()\n    });\n    console.log(history.state.jsonData);\n  }\n  onFileChange(event) {\n    this.formData.append('file', event.target.files[0]);\n    this.formData.append('id', history.state.jsonData.id);\n    this.service.upload(this.formData).subscribe(data => {\n      console.log(data.response);\n      this.openSnackBar(data.response, \"OK\");\n    });\n  }\n  openSnackBar(message, action) {\n    if (message) {\n      this._snackBar.open(message, action);\n    }\n    if (action == 'OK') {\n      this.router.navigate();\n    }\n  }\n}\nResumeUploaderComponent.ɵfac = function ResumeUploaderComponent_Factory(t) {\n  return new (t || ResumeUploaderComponent)(i0.ɵɵdirectiveInject(i1.CandidateService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.Router));\n};\nResumeUploaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResumeUploaderComponent,\n  selectors: [[\"app-resume-uploader\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[\"lang\", \"en\"], [1, \"container\"], [3, \"formGroup\"], [1, \"mt-3\"], [\"formControlName\", \"myFile\", \"type\", \"file\", \"name\", \"myFile\", 1, \"form-control\", 3, \"change\"]],\n  template: function ResumeUploaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"body\")(2, \"div\", 1)(3, \"form\", 2)(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"change\", function ResumeUploaderComponent_Template_input_change_5_listener($event) {\n        ctx.onFileChange($event);\n        return ctx.openSnackBar();\n      });\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.resume);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;;;AAUvD,OAAM,MAAOC,uBAAuB;EAKlCC,YAAoBC,OAAyB,EAASC,SAAsB,EAAUC,MAAa;IAA/E,YAAO,GAAPF,OAAO;IAA2B,cAAS,GAATC,SAAS;IAAuB,WAAM,GAANC,MAAM;IAY5F,aAAQ,GAAG,IAAIC,QAAQ,EAAE;EAZ8E;EAGvGC,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,IAAIR,SAAS,CAAC;MAC1BS,MAAM,EAAE,IAAIV,WAAW;KACxB,CAAC;IACFW,OAAO,CAACC,GAAG,CAACC,OAAO,CAACC,KAAK,CAACC,QAAQ,CAAC;EAErC;EAKAC,YAAY,CAACC,KAAU;IAErB,IAAI,CAACC,QAAQ,CAACC,MAAM,CAAC,MAAM,EAAEF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACnD,IAAI,CAACH,QAAQ,CAACC,MAAM,CAAC,IAAI,EAAEN,OAAO,CAACC,KAAK,CAACC,QAAQ,CAACO,EAAE,CAAC;IAErD,IAAI,CAAClB,OAAO,CAACmB,MAAM,CAAC,IAAI,CAACL,QAAQ,CAAC,CAACM,SAAS,CAACC,IAAI,IAAG;MAClDd,OAAO,CAACC,GAAG,CAACa,IAAI,CAACC,QAAQ,CAAC;MAC1B,IAAI,CAACC,YAAY,CAACF,IAAI,CAACC,QAAQ,EAAC,IAAI,CAAC;IACvC,CAAC,CAAC;EACJ;EACAC,YAAY,CAACC,OAAgB,EAAEC,MAAe;IAC5C,IAAGD,OAAO,EAAC;MACT,IAAI,CAACvB,SAAS,CAACyB,IAAI,CAACF,OAAO,EAAEC,MAAM,CAAC;;IAEtC,IAAGA,MAAM,IAAI,IAAI,EAAC;MAChB,IAAI,CAACvB,MAAM,CAACyB,QAAQ,EAAE;;EAE1B;;AApCW7B,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVpCC,+BAAgB;MAK+EA;QAAUC,wBAAoB;QAAA,OAAEA,kBAAc;MAAA,EAAC;MAA9HD,iBAA+H;;;MAFjIA,eAAoB;MAApBA,sCAAoB","names":["FormControl","FormGroup","ResumeUploaderComponent","constructor","service","_snackBar","router","FormData","ngOnInit","resume","myFile","console","log","history","state","jsonData","onFileChange","event","formData","append","target","files","id","upload","subscribe","data","response","openSnackBar","message","action","open","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Vishal\\Projects\\UI\\emp_management\\src\\app\\resume-uploader\\resume-uploader.component.ts","C:\\Users\\Vishal\\Projects\\UI\\emp_management\\src\\app\\resume-uploader\\resume-uploader.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { CandidateService } from '../services/candidate.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-resume-uploader',\n  templateUrl: './resume-uploader.component.html',\n  styleUrls: ['./resume-uploader.component.css']\n})\nexport class ResumeUploaderComponent implements OnInit {\n\n  jsonData: any;\n\n\n  constructor(private service: CandidateService,private _snackBar: MatSnackBar, private router:Router) { }\n  resume!: FormGroup;\n\n  ngOnInit(): void {\n    this.resume = new FormGroup({\n      myFile: new FormControl()\n    })\n    console.log(history.state.jsonData);\n\n  }\n\n\n  formData = new FormData();\n\n  onFileChange(event: any) {\n\n    this.formData.append('file', event.target.files[0]);\n    this.formData.append('id', history.state.jsonData.id);\n\n    this.service.upload(this.formData).subscribe(data => {\n      console.log(data.response)\n      this.openSnackBar(data.response,\"OK\");\n    })\n  }\n  openSnackBar(message?: string, action?: string){\n    if(message){\n      this._snackBar.open(message, action);\n    }\n    if(action == 'OK'){\n      this.router.navigate();\n    }\n  }\n  \n\n}","<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n    <div class=\"container\">\n        <form [formGroup]=\"resume\">\n            <div class=\"mt-3\">\n                <input class=\"form-control\" formControlName=\"myFile\" type=\"file\" name=\"myFile\" (change)=\"onFileChange($event); openSnackBar()\">\n            </div>\n        </form>\n    </div>\n</body>\n</html>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}